{"version":3,"sources":["components/context/context.js","components/app-todo-item/index.js","components/app-todo-item/app-todo-item.js","components/app-todolist/index.js","components/app-todolist/app-todolist.js","components/app/index.js","components/app/app.js","index.js"],"names":["Context","React","createContext","TodoItem","title","id","completed","useContext","removeTodo","toggleTodo","className","Checkbox","color","checked","onChange","Icon","onClick","TodoList","todos","map","item","key","App","useState","setTodos","todoTitle","setTodoTitle","useEffect","localStorage","setItem","JSON","stringify","t","getItem","parse","Provider","value","filter","todo","Container","Input","e","target","onKeyPress","Date","now","placeholder","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAEaA,EAAUC,IAAMC,gBCDdC,G,MCME,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UAAgB,EAEVC,qBAAWP,GAAtCQ,EAFqC,EAErCA,WAAYC,EAFyB,EAEzBA,WAIpB,OACE,yBAAKC,UAAU,QACb,wBAAIA,UAAWJ,EAAS,UAJhB,YAIgB,wBAJhB,cAKN,kBAACK,EAAA,EAAD,CACEC,MAAM,UACNC,QAASP,EACTQ,SAAU,kBAAML,EAAWJ,MAE7B,8BAAOD,IAET,kBAACW,EAAA,EAAD,CAAML,UAAU,SAASM,QAAS,kBAAMR,EAAWH,KAAnD,aCtBSY,ECGE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACjB,OACG,4BACKA,EAAMC,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,eAAUC,IAAKD,EAAKf,IAAQe,SCNzCE,G,MCOH,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAETL,EAFS,KAEFM,EAFE,OAIkBD,mBAAS,IAJ3B,mBAITE,EAJS,KAIEC,EAJF,KAMhBC,qBAAU,WACRC,aAAaC,QAAQ,QAASC,KAAKC,UAAUb,MAC5C,CAACA,IAEJS,qBAAU,WACR,IAAIK,EAAIJ,aAAaK,QAAQ,UAAY,GACzCT,EAASM,KAAKI,MAAMF,MACnB,IAoCH,OACE,kBAAChC,EAAQmC,SAAT,CAAkBC,MAAO,CAAE5B,WApBV,SAAAH,GACjBmB,EACEN,EAAMmB,QAAO,SAACC,GACZ,OAAOA,EAAKjC,KAAOA,OAiBgBI,WAZtB,SAAAJ,GACjBmB,EACEN,EAAMC,KAAI,SAACmB,GAIT,OAHIA,EAAKjC,KAAOA,IACdiC,EAAKhC,WAAagC,EAAKhC,WAElBgC,SAOT,kBAACC,EAAA,EAAD,KACE,4BAAQ7B,UAAU,kBAChB,yCACA,kBAAC8B,EAAA,EAAD,CACEJ,MAAOX,EACPX,SAAU,SAAC2B,GAAD,OAAOf,EAAae,EAAEC,OAAON,QACvCO,WA1CM,SAAAF,GACA,UAAVA,EAAEpB,MACJG,EAAS,GAAD,mBACHN,GADG,CAEN,CACEb,GAAIuC,KAAKC,MACTzC,MAAOqB,EACPnB,WAAW,MAGfoB,EAAa,MAiCPoB,YAAY,YACZC,KAAK,UAGT,0BAAMrC,UAAU,gBACd,kBAAC,EAAD,CAAUQ,MAAOA,SCjE3B8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.094933b7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Context = React.createContext();","import TodoItem from './app-todo-item';\r\nexport default TodoItem ;","import React, { useContext } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Context } from \"../context/context\";\r\n\r\nimport \"./app-todo-item.css\";\r\n\r\nconst TodoItem = ({ title, id, completed }) => {\r\n    \r\n  const { removeTodo, toggleTodo } = useContext(Context);\r\n\r\n  const cls = \"todo-item\";\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <li className={completed ? `${cls} completed` : `${cls}`}>\r\n        <Checkbox\r\n          color=\"primary\"\r\n          checked={completed}\r\n          onChange={() => toggleTodo(id)}\r\n        />\r\n        <span>{title}</span>\r\n      </li>\r\n      <Icon className=\"delete\" onClick={() => removeTodo(id)}>\r\n        delete\r\n      </Icon>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import TodoList from './app-todolist';\r\nexport default TodoList;","import React from 'react';\r\nimport TodoItem from '../app-todo-item';\r\n\r\n\r\nconst TodoList = ({todos}) => {\r\n  return (\r\n     <ul>\r\n         {todos.map(item => <TodoItem key={item.id} {...item} />)}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import App from './app';\r\nexport default App;","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TodoList from \"../app-todolist\";\r\nimport { Context } from \"../context/context\";\r\n\r\nimport \"./app.css\";\r\n\r\nconst App = () => {\r\n\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const [todoTitle, setTodoTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  useEffect(() => {\r\n    let t = localStorage.getItem(\"todos\") || [];\r\n    setTodos(JSON.parse(t));\r\n  }, []);\r\n\r\n  const addTodo = e => {\r\n    if (e.key === \"Enter\") {\r\n      setTodos([\r\n        ...todos,\r\n        {\r\n          id: Date.now(),\r\n          title: todoTitle,\r\n          completed: false,\r\n        },\r\n      ]);\r\n      setTodoTitle(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  const removeTodo = id => {\r\n    setTodos(\r\n      todos.filter((todo) => {\r\n        return todo.id !== id;\r\n      })\r\n    );\r\n  };\r\n\r\n  const toggleTodo = id => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Context.Provider value={{ removeTodo, toggleTodo }}>\r\n      <Container>\r\n        <header className=\"header-wrapper\">\r\n          <h1>TODO List</h1>\r\n          <Input\r\n            value={todoTitle}\r\n            onChange={(e) => setTodoTitle(e.target.value)}\r\n            onKeyPress={addTodo}\r\n            placeholder=\"todo name\"\r\n            name=\"todo\"\r\n          />\r\n        </header>\r\n        <main className=\"main-wrapper\">\r\n          <TodoList todos={todos} />\r\n        </main>\r\n      </Container>\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}